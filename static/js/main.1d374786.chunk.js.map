{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","React","createElement","className","src","concat","alt","CardList","robots","map","user","index","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","error","info","setState","Component","App","onSearchChange","event","searchField","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1d374786.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nconst Card = ({id,name,email}) =>{\n    return(\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?size=200x200&set=set3`} alt='...'/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) =>{\n\n    return(\n        <div>\n            {\n                robots.map((user,index) =>{\n                    return (<Card \n                        key={user.id} \n                        id={user.id} \n                        name={user.name} \n                        email={user.email}\n                        />);  \n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({searchChange}) =>{\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--blue bg-lightest-blue'\n            type='search' \n            placeholder='Search robots'\n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n    return(\n        <div style={{overflowY:'scroll',border: '1px solid rgba(0,128,128,0.5)', height:'100vh'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React,{Component} from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError:false\n        }\n    }\n    \n    componentDidCatch(error,info){\n        this.setState({hasError:true});\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops. that is not good.</h1>\n        }else{\n            return this.props.children\n        }\n    }\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\n\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state= {\n            robots:[],\n            searchField:'',\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response =>response.json())\n        .then(users =>this.setState({robots:users}));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchField: event.target.value});\n    }\n\n    render(){\n        const {robots,searchField} = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n\n        return !robots.length ?\n            <h1>Loading...</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            )\n        \n\n\n  }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}